{
	"words": [
	  {
		"id": 0,
		"end": 2,
		"text": "1. You are currently the only person in this conference.",
		"start": 0
	  },
	  {
		"id": 1,
		"end": 27,
		"text": "2. Hello, welcome to the postgraduate program in artificial Intelligence and machine learning offered by the you.",
		"start": 22
	  },
	  {
		"id": 2,
		"end": 36,
		"text": "3. Data analysis with Python 0 to pandas is a practical, beginner friendly and coding focused. Introduction to data analysis.",
		"start": 28
	  },
	  {
		"id": 3,
		"end": 67,
		"text": "4. This is a live online course and you can earn a verified certificate of accomplishment by completing this course. If you are interested in learning data science with Python but don't know where to start, then this course is designed just for you. You can learn more and register at zero to pandas.com by the end of this course you will be able to confidently use the Python programming language and its amazing ecosystem of data science libraries like Numpy for mathematical and statistical computing.",
		"start": 37
	  },
	  {
		"id": 4,
		"end": 74,
		"text": "5. Pandas for data processing and analysis. Matplotlib for creating beautiful visualizations and much more.",
		"start": 67
	  },
	  {
		"id": 5,
		"end": 86,
		"text": "6. You will get a chance to practice and improve your skills with weekly assignments and you will also work on an end to end course project where you will perform data analysis on a large real-world data set.",
		"start": 75
	  },
	  {
		"id": 6,
		"end": 117,
		"text": "7. This is a beginner friendly course so you don't need to have any prior knowledge of Python or data science. Some basic programming knowledge will be helpful, but don't worry if you don't know programming, you can learn these concepts with a little extra effort. You will also get access to the course community forum where you can ask questions, join a study group and share what you're working on during the course. This course is created by Jovian ML a sharing and collaboration platform for data science with a worldwide.",
		"start": 87
	  },
	  {
		"id": 7,
		"end": 122,
		"text": "8. Community of 10s of thousands of users from more than 150 countries.",
		"start": 117
	  },
	  {
		"id": 8,
		"end": 130,
		"text": "9. So register now and invite your friends to join the course at 0 to pandagon. I'll see you in the first lecture.",
		"start": 123
	  },
	  {
		"id": 9,
		"end": 162,
		"text": "10. I'm your instructor. My name is Akash. I'm the cofounder and CEO of Jovian ML and before this I've worked as a software engineer at Twitter where I've worked in data engineering and software development. I hold a degree in computer science from IIT Bombay and in the past I've also been a world finalist at the ACM ICPC. I have been using Python for the last 12 years. You can find me on Twitter at auctions now. A quick overview of the course before we get into it. Zero to pandas is a.",
		"start": 132
	  },
	  {
		"id": 10,
		"end": 166,
		"text": "11. Coding first introduction to data analysis using Python.",
		"start": 162
	  },
	  {
		"id": 11,
		"end": 196,
		"text": "12. We will be talking about data analysis. We will write code and through code we will learn whatever mathematical concepts we need. All the material will be available to you, so you can try it out. You will also get some assignments where you can practice these concepts and if you complete all the assignments and exercises then you will earn a certificate of accomplishment. So this is what the certificate looks like. The certificate offered by Jovin ML. Now let's take a look at the course curriculum. Today we are going to talk about introduction to programming with Python.",
		"start": 166
	  },
	  {
		"id": 12,
		"end": 210,
		"text": "13. We will cover the parts that are necessary to start doing some data analysis. Then we will move on to the Numpy library. Numpy is used for numerical computation in Python. We will see how to perform statistics with Numpy.",
		"start": 196
	  },
	  {
		"id": 13,
		"end": 237,
		"text": "14. Next we will analyze tabular data using pandas. You can think of it like working with spreadsheets, but instead of the user interface you will write some code just a few lines of code and it is far more powerful than spreadsheets. Then the lecture is dedicated to data visualization with Matplotlib and Cbon. These are two great libraries for visualization. You can draw different types of graphs, line graphs, bar graphs, heat maps.",
		"start": 211
	  },
	  {
		"id": 14,
		"end": 242,
		"text": "15. We will also learn how to use it, when to use it, which type of graph to use.",
		"start": 238
	  },
	  {
		"id": 15,
		"end": 273,
		"text": "16. And finally, we will bring all this together to do exploratory data analysis of a real-world data set. We will first learn to ask the right questions about the data. We will identify the right tools for the job. Then we will also learn after doing your analysis, how do you present it? So storytelling and presentation is a very important component that is often overlooked, so we will focus on that. So there's a lot of material we will cover and we will cover it gradually. So don't worry, even if you're at a beginner level. If you just know a little bit of programming, you should still be able to catch up.",
		"start": 243
	  },
	  {
		"id": 16,
		"end": 279,
		"text": "17. And there will be weekly assignments here. You will get to practice your skills and learn by doing.",
		"start": 274
	  },
	  {
		"id": 17,
		"end": 299,
		"text": "18. You will also be able to get help from the community and then there is a course project at the end, something that brings everything together where you will get to work on an end to end project involving the real-world data set that is picked by you. You will get a chance to apply all the tools and techniques that you have learned in this course. The goal of this.",
		"start": 280
	  },
	  {
		"id": 18,
		"end": 323,
		"text": "19. Course project, and this entire course is to create something that you can proudly showcase as your own. Original work on your professional profile. You have to submit all the weekly assignments you have to complete the course project and you have to follow the academic honesty policy, which essentially is no plagiarism. That is, do not take somebody else's work and claim credit for it. Let's get started then.",
		"start": 300
	  },
	  {
		"id": 19,
		"end": 341,
		"text": "20. Now the course page is 0 to pandas.com. This course page contains all the information about the course. You can go through the details here. There are some links here. There's a link to the course community discussion forum. There's a link to frequently asked questions and then we have the lessons and the assignments. So let's open up lecture 1.",
		"start": 324
	  },
	  {
		"id": 20,
		"end": 364,
		"text": "21. So here you will be able to see the video. You can see the code used with this lecture. You can just Scroll down and see it or you can see each mini tutorial on its own page. By clicking on these links. So I'm just going to open up the first link. So now what you're looking at is a tutorial, a Jupiter notebook, and we'll cover what that means. Now we need to be able to run the code, so I am going to run the code.",
		"start": 342
	  },
	  {
		"id": 21,
		"end": 375,
		"text": "22. So while that starts when we click run, we take the same code and explanations and everything and then open it up on an online platform which allows us to execute this code.",
		"start": 365
	  },
	  {
		"id": 22,
		"end": 381,
		"text": "23. While that starts on the lesson page, you will find a link to a discussion forum.",
		"start": 375
	  },
	  {
		"id": 23,
		"end": 383,
		"text": "24. So you can just click this link.",
		"start": 381
	  },
	  {
		"id": 24,
		"end": 390,
		"text": "25. And that will open up the discussion forum and this is the place where you can ask questions. So that's how you ask questions.",
		"start": 384
	  },
	  {
		"id": 25,
		"end": 410,
		"text": "26. Moving along, I click the run button and that opened up an interface like this. What you're looking at right now is called the Jupiter interface, so a place where you can write some code, a place where you can execute some code. Jupiter is an IDE or integrated development environment, and it runs completely on your browser. That's the great thing about it.",
		"start": 391
	  },
	  {
		"id": 26,
		"end": 427,
		"text": "27. Because if I zoom out here for a bit, I'm looking at this Jupiter notebook running on my browser, but the actual execution of all the code will happen somewhere on this server called the only person in this org. So right now what I'm looking at is the files associated with my project.",
		"start": 411
	  },
	  {
		"id": 27,
		"end": 432,
		"text": "28. And the file that you want to open up is called first steps with Python.",
		"start": 428
	  },
	  {
		"id": 28,
		"end": 438,
		"text": "29. Just click the first steps with Python file and that will open up for you to see.",
		"start": 433
	  },
	  {
		"id": 29,
		"end": 454,
		"text": "30. So the first thing that I'm going to do is to click on the kernel menu and click restart and clear output. What this will do is I've written some code and I've executed it and there are a lot of outputs of the code. I just want to remove them so that we can execute the code from scratch.",
		"start": 439
	  },
	  {
		"id": 30,
		"end": 460,
		"text": "31. I will also just hide the header so that we have a little more space to see things.",
		"start": 455
	  },
	  {
		"id": 31,
		"end": 462,
		"text": "32. Now we're ready to go.",
		"start": 461
	  },
	  {
		"id": 32,
		"end": 479,
		"text": "33. This is our first step with Python And Jupiter. This will be like a quick Python tutorial, but we will pick up all the important topics that we need to start doing data analysis while I go through this material I will leave out some of the things as exercises for you to try out.",
		"start": 463
	  },
	  {
		"id": 33,
		"end": 509,
		"text": "34. But there's a lot of detail. There's a lot of explanation here. There's an explanation on how to run the code, so we have. We are running it online, so we use the run button, but you can also run it on your computer locally, and there are some instructions here. The setup is a little bit advanced, so I would recommend skipping it if you are just getting started. Now. Coming to Jupiter notebooks themselves. This document that we are looking at. It is made up of cells. It is like a stream of cells so you have cell after cell and cells can contain explanations.",
		"start": 480
	  },
	  {
		"id": 34,
		"end": 517,
		"text": "35. So here I have written some explanation in a cell or cell can contain some code or some programs written in Python.",
		"start": 510
	  },
	  {
		"id": 35,
		"end": 538,
		"text": "36. Now cells can be executed and their outputs can be viewed right within the notebook, which makes it a really powerful platform for experimentation. You just type something and you run that code and see its output. Then you change it and try it again, and then you add some explanation using a text cell. So it's great and we really love Jupyter notebooks. That's why we've built so many things around it.",
		"start": 518
	  },
	  {
		"id": 36,
		"end": 554,
		"text": "37. So the first thing that we will do is to start using Python as a calculator. That's the simplest way to use it and what you can do is you can simply write and execute Python code by adding a code cell within Jupiter. So how do you add a code cell?",
		"start": 539
	  },
	  {
		"id": 37,
		"end": 573,
		"text": "38. There are a couple of ways to do it, by the way, this is what you're looking at. Here is a code cell, but I'll show you how to create a code cell so you can click on a cell. So select a particular cell and this one is a text cell. So then you go insert and insert cell below. So when you do insert cell below that automatically adds a code cell for you.",
		"start": 555
	  },
	  {
		"id": 38,
		"end": 581,
		"text": "39. You can also change the type of this cell. You can change from code to markdown, so markdown is text basically and then you can type some text.",
		"start": 574
	  },
	  {
		"id": 39,
		"end": 599,
		"text": "40. And then what we are going to do is we're going to start running some code cells, so I already have a code cell here. I'm not going to add more, and here are some simple arithmetic expressions that I've written out. 2 + 3 + 9 and now to execute this code what I need to do is to click the run button so there's a run button here that you can click.",
		"start": 582
	  },
	  {
		"id": 40,
		"end": 606,
		"text": "41. You can also click cell run cells or there's a nice keyboard shortcut here which is shift enter.",
		"start": 600
	  },
	  {
		"id": 41,
		"end": 609,
		"text": "42. And that will execute and give you the output.",
		"start": 607
	  },
	  {
		"id": 42,
		"end": 635,
		"text": "43. So that's great. Now we are able to add numbers with Python. Here's a subtraction. Here is a multiplication for multiplication. We use the star sign. Here is a Division 100 / 7. Python automatically converts that into a decimal number, even though these are integers and you can see that it's about 14.28. Now if you just want to get the quotient without the decimal part of it, just get an integer. Then you use a double ÷",
		"start": 610
	  },
	  {
		"id": 43,
		"end": 659,
		"text": "44. here 100 by 7 and if you want to see the remainder then you use this percentage or & operator. This gives you the remainder, so the remainder is 2 and the quotient is 14, and we can verify that we can just take the remainder 2 and we can add it to 14 * 7 and we get 100. So you can combine them as well. Another operator that you might want to learn about is the exponential operator.",
		"start": 636
	  },
	  {
		"id": 44,
		"end": 690,
		"text": "45. But this simply does 5 to the power of three, and you can drive 5 to the power of five, and so on South, as you might expect. This is really simple to get started, you write a code cell, you put some code into a code cell, and then you execute it and it works, and that is valid Python code, so that's great. And as you might expect, these operators have certain precedence by default, but you can also combine them and you can specify the order in which they need to be evaluated by specifying brackets, for instance here I've put 2 + 5.",
		"start": 660
	  },
	  {
		"id": 45,
		"end": 699,
		"text": "46. In brackets so that gets executed first, then this and then these two get multiplied. Then that gets divided by 4 to the power of 3, and that's the output.",
		"start": 690
	  },
	  {
		"id": 46,
		"end": 723,
		"text": "47. So that's basic arithmetic with Python. These are the operators that are supported. Addition, subtraction, multiplication, division and exponent, and what you can do as an exercise if you're new to Python. If you're new to programming, is just open up some word problems. I've given a link to some simple word problems and try to solve them by adding some formulas here and just getting the outputs.",
		"start": 700
	  },
	  {
		"id": 47,
		"end": 755,
		"text": "48. So let's now solve a multi step problem. So here we have a grocery store that sells a bag of ice for one $0.25 and makes a 20% profit on each bag. If it sells 500 bags of ice, how much total profit does it make? OK, a simple arithmetic problem you may have seen this in school, probably primary school. So how we go about it is we lay out all the information so the cost of ice bag is 1.25. The profit margin is 20%, that is 2100.",
		"start": 724
	  },
	  {
		"id": 48,
		"end": 775,
		"text": "49. .2 so the profit per bag is the profit margin times the cost of the ice bag. So then we have this expression and then the number of bags is 500 and then the total profit then is number of bags times the profit per bag. So finally we end up with this expression. This is the point where you would pick up a calculator and here we are going to use Python to do it.",
		"start": 755
	  },
	  {
		"id": 49,
		"end": 806,
		"text": "50. So the grocery store makes a profit of $125 totally. Now this is an OK way to use it, but this is not using the full power of Python And it's not clear by looking at the code what these numbers represent. So what we can do is we can actually give names to each of these numbers by creating variables and variables are an interesting concept in a programming language where you can take information and put them into these boxes or containers and then give them a name. These boxes are called variables and the information stored in them is called.",
		"start": 776
	  },
	  {
		"id": 50,
		"end": 807,
		"text": "51. The variable's value.",
		"start": 806
	  },
	  {
		"id": 51,
		"end": 825,
		"text": "52. So here we are now going to create 3 variables, so the cost of iceberg is the first variable. It has the value 1.251 point 25. Then we have the profit margin and other variable. It has the value .2. And finally we have the number of bags.",
		"start": 808
	  },
	  {
		"id": 52,
		"end": 836,
		"text": "53. This is 500 now. One thing to keep in mind is that I have used underscores because variables need to be a single word and you can break out words using underscores in Python.",
		"start": 826
	  },
	  {
		"id": 53,
		"end": 839,
		"text": "54. If you do not have this then you will get an error.",
		"start": 837
	  },
	  {
		"id": 54,
		"end": 863,
		"text": "55. So now we have the cost of ispac. That's great. We have the profit margin. We have the number of packs now in the arithmetic operations we can start using these. By the way, this is called declaring a variable, so you put a variable name and then you put in equal to sign and then you put the value. So now the variable has that value to check that value you just type the name of the variable out and then you can see the value.",
		"start": 840
	  },
	  {
		"id": 55,
		"end": 887,
		"text": "56. Now we have the profit per back. Now this is a new variable I'm creating and to create this variable I'm actually going to use an expression, an expression that depends on other variables and this is a nice thing where you can start combining these things together and collect a lot of information. So now you have the cost of ice back, so that's 1.25 times the profit margin. So that becomes our profit per bag.",
		"start": 864
	  },
	  {
		"id": 56,
		"end": 894,
		"text": "57. Then we have the total profit, so the total profit is the number of bags times the profit per bag.",
		"start": 888
	  },
	  {
		"id": 57,
		"end": 899,
		"text": "58. And now we can check the total profit. It is 125. So already this is.",
		"start": 895
	  }
	],
	"paragraphs": [
	  {
		"id": 0,
		"end": 2,
		"start": 0,
		"speaker": 1
	  },
	  {
		"id": 1,
		"end": 27,
		"start": 22,
		"speaker": 1
	  },
	  {
		"id": 2,
		"end": 36,
		"start": 28,
		"speaker": 1
	  },
	  {
		"id": 3,
		"end": 67,
		"start": 37,
		"speaker": 1
	  },
	  {
		"id": 4,
		"end": 74,
		"start": 67,
		"speaker": 1
	  },
	  {
		"id": 5,
		"end": 86,
		"start": 75,
		"speaker": 1
	  },
	  {
		"id": 6,
		"end": 117,
		"start": 87,
		"speaker": 1
	  },
	  {
		"id": 7,
		"end": 122,
		"start": 117,
		"speaker": 1
	  },
	  {
		"id": 8,
		"end": 130,
		"start": 123,
		"speaker": 1
	  },
	  {
		"id": 9,
		"end": 162,
		"start": 132,
		"speaker": 1
	  },
	  {
		"id": 10,
		"end": 166,
		"start": 162,
		"speaker": 1
	  },
	  {
		"id": 11,
		"end": 196,
		"start": 166,
		"speaker": 1
	  },
	  {
		"id": 12,
		"end": 210,
		"start": 196,
		"speaker": 1
	  },
	  {
		"id": 13,
		"end": 237,
		"start": 211,
		"speaker": 1
	  },
	  {
		"id": 14,
		"end": 242,
		"start": 238,
		"speaker": 1
	  },
	  {
		"id": 15,
		"end": 273,
		"start": 243,
		"speaker": 1
	  },
	  {
		"id": 16,
		"end": 279,
		"start": 274,
		"speaker": 1
	  },
	  {
		"id": 17,
		"end": 299,
		"start": 280,
		"speaker": 1
	  },
	  {
		"id": 18,
		"end": 323,
		"start": 300,
		"speaker": 1
	  },
	  {
		"id": 19,
		"end": 341,
		"start": 324,
		"speaker": 1
	  },
	  {
		"id": 20,
		"end": 364,
		"start": 342,
		"speaker": 1
	  },
	  {
		"id": 21,
		"end": 375,
		"start": 365,
		"speaker": 1
	  },
	  {
		"id": 22,
		"end": 381,
		"start": 375,
		"speaker": 1
	  },
	  {
		"id": 23,
		"end": 383,
		"start": 381,
		"speaker": 1
	  },
	  {
		"id": 24,
		"end": 390,
		"start": 384,
		"speaker": 1
	  },
	  {
		"id": 25,
		"end": 410,
		"start": 391,
		"speaker": 1
	  },
	  {
		"id": 26,
		"end": 427,
		"start": 411,
		"speaker": 1
	  },
	  {
		"id": 27,
		"end": 432,
		"start": 428,
		"speaker": 1
	  },
	  {
		"id": 28,
		"end": 438,
		"start": 433,
		"speaker": 1
	  },
	  {
		"id": 29,
		"end": 454,
		"start": 439,
		"speaker": 1
	  },
	  {
		"id": 30,
		"end": 460,
		"start": 455,
		"speaker": 1
	  },
	  {
		"id": 31,
		"end": 462,
		"start": 461,
		"speaker": 1
	  },
	  {
		"id": 32,
		"end": 479,
		"start": 463,
		"speaker": 1
	  },
	  {
		"id": 33,
		"end": 509,
		"start": 480,
		"speaker": 1
	  },
	  {
		"id": 34,
		"end": 517,
		"start": 510,
		"speaker": 1
	  },
	  {
		"id": 35,
		"end": 538,
		"start": 518,
		"speaker": 1
	  },
	  {
		"id": 36,
		"end": 554,
		"start": 539,
		"speaker": 1
	  },
	  {
		"id": 37,
		"end": 573,
		"start": 555,
		"speaker": 1
	  },
	  {
		"id": 38,
		"end": 581,
		"start": 574,
		"speaker": 1
	  },
	  {
		"id": 39,
		"end": 599,
		"start": 582,
		"speaker": 1
	  },
	  {
		"id": 40,
		"end": 606,
		"start": 600,
		"speaker": 1
	  },
	  {
		"id": 41,
		"end": 609,
		"start": 607,
		"speaker": 1
	  },
	  {
		"id": 42,
		"end": 635,
		"start": 610,
		"speaker": 1
	  },
	  {
		"id": 43,
		"end": 659,
		"start": 636,
		"speaker": 1
	  },
	  {
		"id": 44,
		"end": 690,
		"start": 660,
		"speaker": 1
	  },
	  {
		"id": 45,
		"end": 699,
		"start": 690,
		"speaker": 1
	  },
	  {
		"id": 46,
		"end": 723,
		"start": 700,
		"speaker": 1
	  },
	  {
		"id": 47,
		"end": 755,
		"start": 724,
		"speaker": 1
	  },
	  {
		"id": 48,
		"end": 775,
		"start": 755,
		"speaker": 1
	  },
	  {
		"id": 49,
		"end": 806,
		"start": 776,
		"speaker": 1
	  },
	  {
		"id": 50,
		"end": 807,
		"start": 806,
		"speaker": 1
	  },
	  {
		"id": 51,
		"end": 825,
		"start": 808,
		"speaker": 1
	  },
	  {
		"id": 52,
		"end": 836,
		"start": 826,
		"speaker": 1
	  },
	  {
		"id": 53,
		"end": 839,
		"start": 837,
		"speaker": 1
	  },
	  {
		"id": 54,
		"end": 863,
		"start": 840,
		"speaker": 1
	  },
	  {
		"id": 55,
		"end": 887,
		"start": 864,
		"speaker": 1
	  },
	  {
		"id": 56,
		"end": 894,
		"start": 888,
		"speaker": 1
	  },
	  {
		"id": 57,
		"end": 899,
		"start": 895,
		"speaker": 1
	  }
	]
  }